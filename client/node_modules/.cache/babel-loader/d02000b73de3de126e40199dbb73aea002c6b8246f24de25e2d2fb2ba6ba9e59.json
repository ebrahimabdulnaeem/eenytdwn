{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 60000,\n  // Increase timeout to 60 seconds for large files\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log('API Request:', config.method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status);\n  return response;\n}, error => {\n  var _error$response, _error$response$data;\n  console.error('API Response Error:', error);\n  if (error.code === 'ERR_NETWORK') {\n    throw new Error('لا يمكن الاتصال بالخادم. يرجى التأكد من تشغيل الخادم والمحاولة مرة أخرى');\n  }\n  throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'حدث خطأ غير معروف';\n});\nexport const getVideoInfo = async url => {\n  try {\n    const response = await api.get('/video-info', {\n      params: {\n        url\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error in getVideoInfo:', error);\n    throw error;\n  }\n};\nexport const downloadVideo = async (url, itag) => {\n  try {\n    // First check if the format needs audio merging\n    const info = await api.get('/video-info', {\n      params: {\n        url\n      }\n    });\n    const format = info.data.formats.find(f => f.itag === parseInt(itag));\n    const needsAudioMerge = !format.hasAudio;\n\n    // Download with appropriate parameters\n    const response = await api.get('/download', {\n      params: {\n        url,\n        itag,\n        includeAudio: needsAudioMerge\n      },\n      responseType: 'blob',\n      timeout: 300000 // 5 minutes timeout for large files\n    });\n\n    // Create a blob URL and trigger download\n    const blob = new Blob([response.data], {\n      type: 'video/mp4'\n    });\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n\n    // Get video title for filename\n    const videoTitle = info.data.videoDetails.title.replace(/[^\\w\\s]/gi, '');\n    link.download = `${videoTitle}_${format.qualityLabel}.mp4`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(downloadUrl);\n  } catch (error) {\n    console.error('Error in downloadVideo:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response$data","code","Error","data","message","getVideoInfo","get","params","downloadVideo","itag","info","format","formats","find","f","parseInt","needsAudioMerge","hasAudio","includeAudio","responseType","blob","Blob","type","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","videoTitle","videoDetails","title","replace","download","qualityLabel","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["/Users/ebrahimenaeem/Desktop/Projects/YTDOWN/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 60000, // Increase timeout to 60 seconds for large files\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(\n  config => {\n    console.log('API Request:', config.method.toUpperCase(), config.url);\n    return config;\n  },\n  error => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  response => {\n    console.log('API Response:', response.status);\n    return response;\n  },\n  error => {\n    console.error('API Response Error:', error);\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('لا يمكن الاتصال بالخادم. يرجى التأكد من تشغيل الخادم والمحاولة مرة أخرى');\n    }\n    throw error.response?.data?.error || error.message || 'حدث خطأ غير معروف';\n  }\n);\n\nexport const getVideoInfo = async (url) => {\n  try {\n    const response = await api.get('/video-info', {\n      params: { url }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error in getVideoInfo:', error);\n    throw error;\n  }\n};\n\nexport const downloadVideo = async (url, itag) => {\n  try {\n    // First check if the format needs audio merging\n    const info = await api.get('/video-info', {\n      params: { url }\n    });\n    \n    const format = info.data.formats.find(f => f.itag === parseInt(itag));\n    const needsAudioMerge = !format.hasAudio;\n\n    // Download with appropriate parameters\n    const response = await api.get('/download', {\n      params: {\n        url,\n        itag,\n        includeAudio: needsAudioMerge\n      },\n      responseType: 'blob',\n      timeout: 300000 // 5 minutes timeout for large files\n    });\n\n    // Create a blob URL and trigger download\n    const blob = new Blob([response.data], { type: 'video/mp4' });\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    \n    // Get video title for filename\n    const videoTitle = info.data.videoDetails.title.replace(/[^\\w\\s]/gi, '');\n    link.download = `${videoTitle}_${format.qualityLabel}.mp4`;\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(downloadUrl);\n  } catch (error) {\n    console.error('Error in downloadVideo:', error);\n    throw error;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}