{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahimenaeem/Desktop/Projects/YTDOWN/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Alert, CircularProgress, Snackbar } from '@mui/material';\nimport UrlInput from './components/UrlInput';\nimport VideoInfo from './components/VideoInfo';\nimport DownloadOptions from './components/DownloadOptions';\nimport { getVideoInfo, downloadVideo } from './utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videoInfo, setVideoInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [currentUrl, setCurrentUrl] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const handleUrlSubmit = async url => {\n    // Reset states\n    setLoading(true);\n    setError('');\n    setVideoInfo(null);\n    setCurrentUrl(url);\n    setShowSuccessMessage(false);\n    try {\n      // Basic URL validation\n      if (!url.trim()) {\n        throw new Error('Please enter a YouTube URL');\n      }\n      try {\n        new URL(url);\n      } catch {\n        throw new Error('Please enter a valid URL');\n      }\n      const info = await getVideoInfo(url);\n      setVideoInfo(info);\n      setShowSuccessMessage(true);\n    } catch (err) {\n      console.error('Error fetching video:', err);\n      setError(err.message || 'Failed to fetch video info. Please check the URL and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = itag => {\n    try {\n      downloadVideo(currentUrl, itag);\n    } catch (err) {\n      setError('Failed to start download. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"YouTube Downloader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"Download your favorite YouTube videos in various formats and qualities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UrlInput, {\n      onSubmit: handleUrlSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), videoInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(VideoInfo, {\n        videoInfo: videoInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DownloadOptions, {\n        formats: videoInfo.formats,\n        onDownload: handleDownload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showSuccessMessage,\n      autoHideDuration: 3000,\n      onClose: () => setShowSuccessMessage(false),\n      message: \"Video information loaded successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RwQFi/0OMgNSEHlgYa1mV0Z2+xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Alert","CircularProgress","Snackbar","UrlInput","VideoInfo","DownloadOptions","getVideoInfo","downloadVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","videoInfo","setVideoInfo","loading","setLoading","error","setError","currentUrl","setCurrentUrl","showSuccessMessage","setShowSuccessMessage","handleUrlSubmit","url","trim","Error","URL","info","err","console","message","handleDownload","itag","maxWidth","sx","py","children","textAlign","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","display","justifyContent","my","severity","onClose","formats","onDownload","open","autoHideDuration","_c","$RefreshReg$"],"sources":["/Users/ebrahimenaeem/Desktop/Projects/YTDOWN/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Box, Alert, CircularProgress, Snackbar } from '@mui/material';\nimport UrlInput from './components/UrlInput';\nimport VideoInfo from './components/VideoInfo';\nimport DownloadOptions from './components/DownloadOptions';\nimport { getVideoInfo, downloadVideo } from './utils/api';\n\nfunction App() {\n  const [videoInfo, setVideoInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [currentUrl, setCurrentUrl] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  const handleUrlSubmit = async (url) => {\n    // Reset states\n    setLoading(true);\n    setError('');\n    setVideoInfo(null);\n    setCurrentUrl(url);\n    setShowSuccessMessage(false);\n\n    try {\n      // Basic URL validation\n      if (!url.trim()) {\n        throw new Error('Please enter a YouTube URL');\n      }\n\n      try {\n        new URL(url);\n      } catch {\n        throw new Error('Please enter a valid URL');\n      }\n\n      const info = await getVideoInfo(url);\n      setVideoInfo(info);\n      setShowSuccessMessage(true);\n    } catch (err) {\n      console.error('Error fetching video:', err);\n      setError(err.message || 'Failed to fetch video info. Please check the URL and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownload = (itag) => {\n    try {\n      downloadVideo(currentUrl, itag);\n    } catch (err) {\n      setError('Failed to start download. Please try again.');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Box sx={{ textAlign: 'center', mb: 4 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n          YouTube Downloader\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\n          Download your favorite YouTube videos in various formats and qualities\n        </Typography>\n      </Box>\n\n      <UrlInput onSubmit={handleUrlSubmit} />\n\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n          <CircularProgress />\n        </Box>\n      )}\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {videoInfo && (\n        <>\n          <VideoInfo videoInfo={videoInfo} />\n          <DownloadOptions\n            formats={videoInfo.formats}\n            onDownload={handleDownload}\n          />\n        </>\n      )}\n\n      <Snackbar\n        open={showSuccessMessage}\n        autoHideDuration={3000}\n        onClose={() => setShowSuccessMessage(false)}\n        message=\"Video information loaded successfully\"\n      />\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}